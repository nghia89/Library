@model BiTech.Library.Models.EditUserViewModel
@{
    ViewBag.Title = "_Edit";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
    //var hinhChanDung = Model.HinhChanDung;
}
<link href="~/bower_components/sweetalert/dist/sweetalert.css" rel="stylesheet" />
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
<div class="Title">Cập nhật</div>
<div ng-app="LibraryApp" class="container">
    @*<h5 class="text-danger">@ViewBag.UnSuccess</h5>*@   
    <button type="button" class="btn btn-sm btn-primary" onclick="window.location='@Url.Action("Details", "ThanhVien",new { idUser = Model.Id })'">
        <i class="fa fa-arrow-circle-left" style="padding-right: 4px;font-size: 17px;"></i>Trở lại
    </button>
   
    @using (Html.BeginForm("_Edit", "ThanhVien", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
    {      
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m=>m.Id)
        @Html.ValidationSummary("", new { @class = "text-danger" })       

        <div class="form-group row">
            @Html.LabelFor(m => m.Ten, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Ten, new { @class = "form-control form-control-sm", @maxlength = "40" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(m => m.GioiTinh, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.GioiTinh, new SelectList(new List<string>() { "Nam", "Nữ" }), "--//--", new { @class = "form-control form-control-sm" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(m => m.NgaySinh, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.NgaySinh, "{0:dd/MM/yyyy}", new { @class = "form-control form-control-sm DatetimePicker", @maxlength = "20" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(m => m.LopHoc, new { @class = "col-md-2 control-label" })
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.LopHoc, new { @class = "form-control form-control-sm" })
            </div>
            @Html.LabelFor(m => m.NienKhoa, new { @class = "text-right col-md-2 control-label" })
            <div class="col-md-4">
                @Html.DropDownListFor(m => m.NienKhoa, new SelectList(Model.ListNienKhoa), "---Chọn niên khóa---", new { @class = "form-control form-control-sm" })
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(m => m.DiaChi, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.DiaChi, new { @class = "form-control form-control-sm" })
            </div>
        </div>
        <div class="form-group row">    
            @Html.LabelFor(m => m.SDT, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.SDT, new { @class = "form-control form-control-sm" })
            </div>
        </div>
        @*<div class="form-group row">
                @Html.LabelFor(m => m.ChucVu, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.ChucVu, new SelectList(new List<string>() { "Học sinh", "Giáo viên" }), "--//--",
                   new { @class = "form-control",onclick = @"ChangePosition()" })
                </div>
            </div>*@
        <div class="form-group row">
            <label class="col-form-label col-md-2 control-label" for="TomTat">Ảnh thành viên:</label>
            <div class="col-sm-6">
                <img id="SaveImage" src="@Model.LinkAvatar" alt="Ảnh nhân viên" style="width:220px" />
                @Html.TextBoxFor(m => m.HinhChanDung, new { type = "file", accept = "image/*" })
                @Html.ValidationMessageFor(m => m.HinhChanDung)
            </div>
        </div>

                    <div class="form-group row">
                        <div class="col-md-2"></div>
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" class="btn btn-sm btn-primary" value="Lưu"/>
                            <input type="button" class="btn btn-sm btn-default" value="trở lại" onclick="window.location='@Url.Action("Details", "ThanhVien",new { idUser=Model.Id})'" />
                        </div>
                    </div>
    }
</div>

<div id="ajax"></div>

@section scripts{
    @*<script src="~/Scripts/bootstrap.min.js"></script>*@
    <script src="~/bower_components/jquery-ajax-unobtrusive/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/bower_components/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/bower_components/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/bower_components/sweetalert/dist/sweetalert.min.js"></script>
    <script src="~/Scripts/angular.min.js"></script>
    <script src="~/Scripts/LibraryAngularJS.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script>
        jQuery.validator.methods["date"] = function (value, element) { return true; }
        // Ngày sinh thành viên
        $(function () {            
            $(".DatetimePicker").datepicker({
                dateFormat: 'dd/mm/yy',
                monthNamesShort: ["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"],
                changeMonth: true,
                changeYear: true,
                yearRange: "1970:-4"
            }).attr("readonly", "readonly");
        });
        // Ảnh thành viên
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#SaveImage').attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }
        $("#HinhChanDung").change(function () {
            readURL(this);
        });

        function RequestAltInsertGuiBegin() {
            $(this).addClass('active');
        }

        function RequestAltInsertGuiSuccess(data) {
            $(this).removeClass('active');

            $("#ajax").html(data);

            $("#edit-student-modal").modal();

            var form = $("#edit-student-modal").closest("form");
            form.removeData('validator');
            form.removeData('unobtrusiveValidation');
            $.validator.unobtrusive.parse(form);
        }

        //function readURL(input) {
        //    if (input.files && input.files[0]) {
        //        var reader = new FileReader();
        //        reader.onload = function (e) {
        //            $('#blah').attr('src', e.target.result);
        //        }
        //        reader.readAsDataURL(input.files[0]);
        //    }
        //}

        //$("#FileImageCover").change(function () {
        //    readURL(this);
        //});

        //$(document).ready(function () {
        //    setInterval(function () {
        //        angular.element(document.getElementById('ListTT')).scope().GetAllData();
        //        angular.element(document.getElementById('ListNXB')).scope().GetAllData();
        //    }, 30000);
        //});
    </script>
}


