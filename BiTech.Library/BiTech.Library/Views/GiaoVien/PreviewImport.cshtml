@model BiTech.Library.Models.ImportResultViewModel
@using Newtonsoft.Json;
@{
    Layout = null;
}
<link href="~/bower_components/sweetalert/dist/sweetalert.css" rel="stylesheet" />
<ul class="list-group">
    <li class="list-group-item">
        <span class="badge">@Model.TotalEntry</span>
        <b>Tổng số tài khoản đã nhận dạng</b>
    </li>
</ul>

<center><h3>Danh sách đã nhận diện</h3></center>

<div id="result-table-container">
    <div>
        <table class="table table-bordered table-striped" id="result-table">
            <thead>
                <tr>
                    @{
                        var longestRow = Model.RawDataList.OrderByDescending(_ => _.Rank).FirstOrDefault();
                        if (longestRow != null)
                        {
                            <th class="order-number-column"></th>
                            for (int i = 0; i < Model.RawDataList.FirstOrDefault().Length; i++)
                            {
                                <th>
                                    <select class="form-control" onclick="clearSelectBoxDefaultOption(this)" id="select-@i" data-is-selected="false" data-datatype-chooser="true">
                                        <option>-----------------------------------------------------------------------------</option>
                                        <option value="FullName">Họ & tên</option>
                                        <option value="Username">Tên user</option>
                                        <option value="Password">Mã thành viên</option>
                                        <option value="Email">Loại tài khoản</option>
                                        <option value="PhoneNumber">Giới tính</option>
                                        <option value="GrantedPermissionList">Ngày sinh</option>
                                        <option value="RoleSystemName">Lớp học</option>
                                        <option value="GrantedGradeAndSubjectId">Niên khóa</option>
                                        <option value="Address">Địa chỉ</option>
                                        <option value="PhoneNumber">SĐT</option>
                                    </select>
                                </th>

                            }
                        }
                    }
                    <th width="150px"><center>Thao tác</center></th>
                </tr>
            </thead>
            <tbody>
                @{
                    var orderNumber = 0;
                    var index = 0;
                    foreach (var item in Model.RawDataList)
                    {
                        orderNumber += 1;
                        <tr id="element-@orderNumber">
                            <td><center>@orderNumber</center></td>
                            @for (int j = 0; j < item.Length; j++)
                            {
                                <td>@item[j]</td>
                            }
                            <td>
                                <center>
                                    <a href="#@orderNumber" data-array-index="@index" class="btn btn-primary edit-action">Sửa</a>
                                    <a href="#@orderNumber" data-array-index="@index" class="btn btn-danger remove-acction">Xóa</a>
                                </center>
                            </td>
                        </tr>
                        index++;
                    }
                }
            </tbody>
        </table>
        <div class="f1-buttons">
            <button type="button" class="btn btn-previous"><i class="glyphicon glyphicon-chevron-left"></i> Quay lại</button>
            <button class="btn btn-success has-spinner btn-check-step-2" id="btn-check-step-2">Hoàn tất <i class="glyphicon glyphicon-chevron-right"></i><i class="fast-right-spinner glyphicon glyphicon-refresh"></i></button>
            <button type="button" class="btn btn-next" id="step-2-success" style="display: none;">Next</button>
        </div>
        <br />
    </div>
</div>
@{
    // Chuyển danh sách các tài khoản thành chuỗi JSON để chuyển lên Server
    var jsonData = JsonConvert.SerializeObject(Model.RawDataList);  
}

<script>
    jsonData = @jsonData;
    function clearSelectBoxDefaultOption(element) {
        if ($(element).attr('data-is-selected') == 'false') {
            $('#' + $(element).attr('id') + ' :selected').remove();
            $(element).attr('data-is-selected', 'true')
        }
        $('#' + $(element).attr('id')).removeClass('duplicate-select-box-value');
    }        
    missingInformation            = false;
    finishCheckMissingInformation = false;
    duplicateInformation          = false;
    // Save changes
    $(document).on('click','button[data-action="save-changes"]',function () {
        var orderNumber = parseInt($(this).attr("data-order-number"));
        var index       = orderNumber - 1;
        var length      = parseInt($(this).attr("data-length"));

        for (var i = 0; i < length; i++) {
            jsonData[index][i] = $("#element-" + orderNumber + "-" + i).val();
            $("#element-" + orderNumber + "-" + i).replaceWith(jsonData[index][i] );
        }

        $("#element-" + orderNumber + "-" + (length + 1 )).html('<center><a href="#'+orderNumber+'" data-array-index="'+(orderNumber-1)+'" class="btn btn-primary edit-action">Sửa</a> <a href="#'+orderNumber+'" data-array-index="'+index+'" class="btn btn-danger remove-acction">Xóa</a></center>');
    });
    // Undo changes
    $(document).on('click','button[data-action="undo-changes"]',function () {
        var orderNumber = parseInt($(this).attr("data-order-number"));
        var index       = orderNumber - 1;
        var length      = parseInt($(this).attr("data-length"));

        var originalData = jsonData[index];
        for (var i = 0; i < length; i++) {
            $("#element-" + orderNumber + "-" + i).replaceWith(originalData[i]);
        }

        $("#element-" + orderNumber + "-" + (length + 1 )).html('<center><a href="#'+orderNumber+'" data-array-index="'+(orderNumber-1)+'" class="btn btn-primary edit-action">Sửa</a> <a href="#'+orderNumber+'" data-array-index="'+index+'" class="btn btn-danger remove-acction">Xóa</a></center>');
    });
    // Edit action
    $(document).on('click', '.edit-action', function () {
        var arrayIndex = $(this).attr('data-array-index');
        //  var data = jsonData[arrayIndex];
        var data = jsonData[arrayIndex];
        var orderNumber = parseInt(arrayIndex) + 1;

        $.post('@Url.Content("~/GiaoVien/RequestEditPreviewForm")',{
            data : data,
            orderNumber :orderNumber
        },function (response) {
            $("#element-" + orderNumber).html(response);
        });
    });
    // Remove action
    $(document).on('click','.remove-acction', function () {
        var arrayIndex = $(this).attr('data-array-index');
        jsonData.splice(arrayIndex, 1);

        swal({
            title: "Xác nhận",
            text: "Bạn có chắc chắn xóa mục đã chọn không ?",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Đồng ý",
            cancelButtonText: "Hủy",
            closeOnConfirm: false
        },
       function (isConfirm) {
           if (isConfirm) {
               $("#element-" + (parseInt(arrayIndex) + 1)).hide();
               console.log( $("#element-" + (parseInt(arrayIndex) + 1)));
               swal({
                   title: "Đã xong",
                   type: "success",
                   text: "Đã loại bỏ tài khoản mà bạn vừa chọn !!!"
               }, function () {

               });
           }
       });
    });

    $(document).on('click', '#btn-check-step-2', function (e) {
        e.preventDefault();
        $(this).addClass('active');

        var totalSelectBox = @((longestRow != null) ? longestRow.Length : 0);

        // Đánh dấu thiếu thông tin
        for (var i = 0; i < totalSelectBox; i++) {
            var currentElementValue  = $("#select-" + i).val();

            // Kiểm tra giá trị của Select này có trùng với Select box nào k ?
            for (var j = 0; j <= totalSelectBox -1; j++) {
                finishCheckMissingInformation = false;
                // báo hiệu chưa chọn Option nào
                if ($("#select-" + j).val().indexOf("---") > -1 )
                {
                    $("#select-" + j).addClass('duplicate-select-box-value');
                    missingInformation = true;
                }

                if (j == i || j < i) { continue; }

                if (missingInformation && finishCheckMissingInformation == false) {
                    continue;
                }
                // Trùng option
                if ($("#select-" + j).val() == currentElementValue) {
                    $("#select-" + j).addClass('duplicate-select-box-value');
                    duplicateInformation = true;
                }

            }
        }

        if (missingInformation) {
            swal({title:'Thiếu thông tin',text:'Bạn vui lòng chọn Loại thông tin của từng cột.',type:'error'},function () {
                goToByScroll("result-table");
            });
        }

        if (duplicateInformation) {
            swal({title:'Trùng thông tin',text:'Các cột thông tin không được trùng nhau.',type:'error'},function () {
                goToByScroll("result-table");
            });
        }

        // Nếu check form không có vấn đề gì thì tiến hành validate
        if (missingInformation == false && duplicateInformation == false) {

            var columnOptions = "";
            for (var i = 0; i < @longestRow.Length; i++) {
                columnOptions += "|" + $("#select-" +i).val();
            }
            
            $.post('@Url.Content("~/GiaoVien/ImportSave")',{
                data : jsonData,
                columnOptions : columnOptions
            }).done(function (data) {

                $("#success-step-container #message").html(data);
                $("#step-2-success").click();
                $("#btn-check-step-2").removeClass('active');
            }).fail(function () {
                swal({title:'Thông tin không hợp lệ',text:'Kiểm tra lại các cột dữ liệu có phù hợp hay chưa.',type:'error'},function () {
                    $("#btn-check-step-2").removeClass('active');
                });
            });
        }
        else
        {
            $(this).removeClass('active');
        }

        finishCheckMissingInformation = true;
        missingInformation            = false;
        duplicateInformation          = false;
    });

    function goToByScroll(id){
        // Remove "link" from the ID
        id = id.replace("link", "");
        // Scroll
        $('html,body').animate({
            scrollTop: $("#"+id).offset().top - 100},
            'slow');
    }

    var currentTable = $("#result-table").clone();
    currentTable.find('.danger').remove();
    currentTable.find('.warning').remove();
</script>



