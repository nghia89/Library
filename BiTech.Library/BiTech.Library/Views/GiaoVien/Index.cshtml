@model  BiTech.Library.Models.UserViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
    var x = ViewBag.arr;
}
<link href="~/bower_components/sweetalert/dist/sweetalert.css" rel="stylesheet" />
<link href="~/Content/AutoComplete.css" rel="stylesheet" />

@*<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js"></script>*@

<div class="Title">Danh sách giáo viên</div>
<div class="text-success">@ViewBag.Success</div>
<h5 class="text-danger">@ViewBag.SearchFail</h5>
<div class="container">
    @using (Html.BeginForm("Index", "GiaoVien", FormMethod.Post, new { role = "form" }))
    {
        <div class="container" id="tv_tk">
            <div class="col-lg-6">
                <div class="input-group form-group">
                    <select id="choice" class="selectpicker form-control form-control-sm" data-live-search="true">
                        <option value="matv">Tìm theo mã giáo viên</option>
                        <option value="tentv">Tìm theo tên giáo viên</option>
                    </select>
                    
                    <!--<input type="text" class="form-control form-control-sm" name="snpid" placeholder="Tìm kiếm ...">-->
                    <div value="temp" id="noidung_ajax">
                        @Html.TextBoxFor(m => m.MaSoThanhVien, new { @placeholder = "Mã giáo viên", @id = "searchMaTV", @class = "form-control form-control-sm", autocomplete = "off" })
                    </div>
                    <div class="input-group-append">
                        <input type="submit" value="Tìm kiếm" class="btn btn-sm btn-primary" />
                    </div>
                </div>
                <!-- SEPARATE -->
                <!-- 1 -->
                <div class="input-group form-group">
                    <label >Tìm theo mã giáo viên</label>

                    <!--<input type="text" class="form-control form-control-sm" name="snpid" placeholder="Tìm kiếm ...">-->
                    <div value="temp" id="noidung_ajax">
                        @Html.TextBoxFor(m => m.MaSoThanhVien, new { @placeholder = "Mã giáo viên", @id = "searchMaTV", @class = "form-control form-control-sm", autocomplete = "off" })
                    </div>
                    <div class="input-group-append">
                        <input type="submit" value="Tìm kiếm" class="btn btn-sm btn-primary" />
                    </div>
                </div>
                <!-- SEPARATE -->
                <!-- 2 -->
                <div class="input-group form-group">
                    
                    <label>Tìm theo tên giáo viên</label>
                    <!--<input type="text" class="form-control form-control-sm" name="snpid" placeholder="Tìm kiếm ...">-->
                    <div value="temp" id="noidung_ajax">
                        @Html.TextBoxFor(m => m.MaSoThanhVien, new { @placeholder = "Mã giáo viên", @id = "searchMaTV", @class = "form-control form-control-sm", autocomplete = "off" })
                    </div>
                    <div class="input-group-append">
                        <input type="submit" value="Tìm kiếm" class="btn btn-sm btn-primary" />
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<br />
<div class="row">
    <div class="col-md-12">

        @Html.ActionLink("Thêm giáo viên", "_CreateUser", "GiaoVien", new { @class = "btn btn-sm btn-primary" })

        @*
            @Html.ActionLink("Thêm từ File Excel", "ImportFromExcel", "GiaoVien", new { @class = "btn btn-sm btn-primary" })
            @Html.ActionLink("Xuất mẫu thẻ giáo viên", "ExportWord", "GiaoVien", new { @class = "btn btn-sm btn-primary" })
        *@
        <button type="button" class="btn btn-primary btn-sm" onclick="window.location='@Url.Action("ImportFromExcel", "GiaoVien")'">
            <i class="fa fa-file-excel-o" style="padding-right: 4px;font-size: 20px;"></i>Thêm từ File Excel
        </button>

        <button type="button" class="btn btn-primary btn-sm" onclick="window.location='@Url.Action("ExportWord", "GiaoVien")'">
            <i class="fa fa-file-word-o" style="padding-right: 4px;font-size: 20px;"></i>Xuất mẫu thẻ giáo viên
        </button>
    </div>
</div>
<h5 class="text-success">@ViewBag.Success</h5>
<h5 class="text-danger">@ViewBag.UnSuccess</h5>

<div class="m10">
    @Html.Action("_PartialUser", "GiaoVien", new { @IdUser = "", @list = Model.ListThanhVien })
</div>
@section scripts{  
    <script src="~/bower_components/jquery-ajax-unobtrusive/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/bower_components/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/bower_components/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/bower_components/sweetalert/dist/sweetalert.min.js"></script>
    <script src="~/Scripts/angular.min.js"></script>
    <script src="~/Scripts/LibraryAngularJS.js"></script>
    <script>
        // Xóa thành viên
        function Delete(Id, Ten) {
            swal({
                title: " Bạn có chắc muốn khóa giáo viên " + Ten + " không?",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Có",
                cancelButtonText: "Không",
                closeOnConfirm: false,
                closeOnCancel: false
            },
            function (isConfirm) {
                if (isConfirm) {
                    $.ajax({
                        type: 'POST',
                        url: '/GiaoVien/Delete',
                        data: { "Id": Id },
                        success: function (resultData) {
                            swal({
                                title: "Khóa thành công!",
                                type: "success",
                                showCancelButton: false,
                                confirmButtonText: "OK",
                                closeOnConfirm: false
                            },
                            function (isConfirm) {
                                window.location.href = '/GiaoVien/Index';
                            });
                        }
                    })
                } else {
                    swal("Cancel!", null, "error");
                }
            });
        }
        // Hình nhân viên
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#blah').attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }
        $("#FileImageCover").change(function () {
            readURL(this);
        });
        // AutoCompelete Search
        function AutoComplete(inp, arr) {
            var currentFocus;
            inp.addEventListener("input", function (e) {
                var a, b, i, val = this.value;
                closeAllLists();
                if (!val) { return false; }
                currentFocus = -1;
                a = document.createElement("DIV");
                a.setAttribute("id", this.id + "AutoComplete-list");
                a.setAttribute("class", "AutoComplete-items");
                this.parentNode.appendChild(a);
                for (i = 0; i < arr.length; i++) {
                    if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
                        b = document.createElement("DIV");
                        b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
                        b.innerHTML += arr[i].substr(val.length);
                        b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
                        b.addEventListener("click", function (e) {
                            inp.value = this.getElementsByTagName("input")[0].value;
                            closeAllLists();
                        });
                        a.appendChild(b);
                    }
                }
            });
            inp.addEventListener("keydown", function (e) {
                var x = document.getElementById(this.id + "AutoComplete-list");
                if (x) x = x.getElementsByTagName("div");
                if (e.keyCode == 40) {
                    currentFocus++;
                    addActive(x);
                } else if (e.keyCode == 38) {
                    currentFocus--;
                    addActive(x);
                } else if (e.keyCode == 13) {
                    e.preventDefault();
                    if (currentFocus > -1) {
                        if (x) x[currentFocus].click();
                    }
                }
            });
            function addActive(x) {
                if (!x) return false;
                removeActive(x);
                if (currentFocus >= x.length) currentFocus = 0;
                if (currentFocus < 0) currentFocus = (x.length - 1);
                x[currentFocus].classList.add("AutoComplete-active");
            }
            function removeActive(x) {
                for (var i = 0; i < x.length; i++) {
                    x[i].classList.remove("AutoComplete-active");
                }
            }
            function closeAllLists(elmnt) {
                var x = document.getElementsByClassName("AutoComplete-items");
                for (var i = 0; i < x.length; i++) {
                    if (elmnt != x[i] && elmnt != inp) {
                        x[i].parentNode.removeChild(x[i]);
                    }
                }
            }
            document.addEventListener("click", function (e) {
                closeAllLists(e.target);
            });
        }
        // Gọi hàm AutoComplete       
        AutoComplete(document.getElementById("searchMaTV"), [@Html.Raw("'" + string.Join("', '", (string[])@Model.ListMaTV) + "'")]);
        // Choice Search
        $("#tv_tk").on("change", "#choice", function () {
            if ($(this).val() == "matv") {
                $("#noidung_ajax").html('@Html.TextBoxFor(m => m.MaSoThanhVien, new { @placeholder = "Mã giáo viên", @id = "searchMaTV", @class = "form-control form-control-sm", autocomplete = "off" })');               
                AutoComplete(document.getElementById("searchMaTV"), [@Html.Raw("'" + string.Join("', '", (string[])@Model.ListMaTV) + "'")]);
            }
            else {
                $("#noidung_ajax").html('@Html.TextBoxFor(m => m.Ten, new { @placeholder = "Tên giáo viên", @id = "searchName", @class = "form-control form-control-sm", autocomplete = "off" })');
                AutoComplete(document.getElementById("searchName"), [@Html.Raw("'" + string.Join("', '", (string[])@Model.ListName) + "'")]);
            }
        });        
    </script>
}
