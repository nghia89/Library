@model BiTech.Library.Models.PhieuMuonModelView

@{
    ViewBag.Title = "_CreatePhieuMuon";
}

<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js"></script>
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
<link href="~/Content/bootstrap.css" rel="stylesheet" />
<link href="~/bower_components/sweetalert/dist/sweetalert.css" rel="stylesheet" />
<script src="~/bower_components/jquery/dist/jquery.js"></script>
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">

<h5 class="text-danger">@ViewBag.UnSuccess</h5>
<h5 class="text-danger">@ViewBag.SoLuong</h5>
<h5 class="text-danger">@ViewBag.Date</h5>
<hr />
<div ng-app="LibraryApp" class="container">
    @using (Html.BeginForm("_CreatePhieuMuon", "PhieuMuon", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4>Tạo phiếu mượn.</h4>
        <hr />
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.IdUser, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.IdUser, new { @class = "form-control", onchange = "OnChangeEvent();", @id = "idUser" })
            </div>
            @Html.ValidationMessageFor(m => m.IdUser)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.TenNguoiMuon, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.TenNguoiMuon, new { @class = "form-control", @readonly = "readonly", @id = "idTen" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(m => m.TenSach, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.TenSach, new { @class = "form-control" })
                </div>
            </div>*@
        @*<div class="form-group">
                @Html.LabelFor(m => m.SoLuong, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.SoLuong, new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(m => m.SoLuong)
            </div>*@

        <div class="form-group">
            @Html.LabelFor(m => m.NgayMuon, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.NgayMuon, new { @class = "form-control datepicker" })
            </div>
            @Html.ValidationMessageFor(m => m.NgayMuon)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.NgayPhaiTra, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.NgayPhaiTra, new { @class = "form-control datepicker" })
            </div>
            @Html.ValidationMessageFor(m => m.NgayPhaiTra)
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.MaSach, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @*@Html.TextBoxFor(m => m.MaSach, new { @class = "form-control" })*@
                <div ng-cloak ng-controller="AddBookCtrlr" class="w3-card-2 w3-margin" style="max-width:400px;">
                   
                    <div class="w3-container w3-light-grey w3-padding-16">
                        <div class="w3-row w3-margin-top">
                            <div class="w3-col s10">
                                <input placeholder="Nhập mã sách" ng-model="addMe" class="w3-input w3-border w3-padding">
                            </div>
                            <div class="w3-col s2">
                                <button ng-click="addItem()" class="w3-btn w3-padding w3-green">Thêm </button>
                            </div>
                        </div>
                        <p class="w3-text-red">{{errortext}}</p>
                    </div>

                    <header class="w3-container w3-light-grey w3-padding-16">
                        <h3>Danh sách mượn</h3>
                    </header>
                    <ul class="w3-ul">
                        <li ng-repeat="s in products" class="w3-padding-16">{{s}}<span ng-click="removeItem($index)" style="cursor:pointer;" class="w3-right w3-margin-right">×</span></li>
                    </ul>


                    @*a thinh*@
                    @*<div ng-repeat="sach in sachs" id="{{sach.Id}}">
                        <p ng-cloak>{{sach.Name}}</p>
                        <p ng-cloak>{{sach.Gia}}</p>
                    </div>*@

                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="Tạo mới" />
            </div>
        </div>
            <hr />


        // Nhập mã sách
        @*<div ng-app="LibraryApp" ng-cloak ng-controller="AddBookCtrlr" class="w3-card-2 w3-margin" style="max-width:400px;">
            <header class="w3-container w3-light-grey w3-padding-16">
                <h3>Sách mượn</h3>
            </header>
            <ul class="w3-ul">
                <li ng-repeat="s in products" class="w3-padding-16">{{s}}<span ng-click="removeItem($index)" style="cursor:pointer;" class="w3-right w3-margin-right">×</span></li>
            </ul>
            <div class="w3-container w3-light-grey w3-padding-16">
                <div class="w3-row w3-margin-top">
                    <div class="w3-col s10">
                        <input placeholder="Add shopping items here" ng-model="addMe" class="w3-input w3-border w3-padding">
                    </div>
                    <div class="w3-col s2">
                        <button ng-click="addItem()" class="w3-btn w3-padding w3-green">Add</button>
                    </div>
                </div>
                <p class="w3-text-red">{{errortext}}</p>
            </div>
        </div>*@


        // ---------------------------------------------------
        @*<div class="form-group">
                @Html.LabelFor(m => m.MaSach, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.MaSach, new { @class = "form-control", @id = "maSach" })
                </div>
                @Html.ValidationMessageFor(m => m.MaSach)
            </div>*@

        @*<input type="text" name="IP" id="maSach" />

            <div class="form-group">
                @Html.LabelFor(m => m.MaSach, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">

                </div>
                @Html.ValidationMessageFor(m => m.MaSach)
            </div>

            <input type="button" value="Thêm" onclick="add_list_ajax()" />

                <select id="lstValue" multiple>
                    <option value="empty">
                </select>

                <input type="button" name="delete" value="Delete" onclick="deleteValue()" />*@

        //------------------------------------------------



        @*<div ng-app="bookList" ng-controller="myCtrl">
                <ul>
                    <li ng-repeat="x in products">
                        {{x}}
                        <span ng-click="removeItem($index)">&times;</span>
                    </li>
                </ul>
                <input ng-model="addMe">
                <button ng-click="addItem()">Add</button>
                <p>{{errortext}}</p>
            </div>*@
    }
</div>

@section Scripts{
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script>
        var app = angular.module("LibraryApp", []);
        app.controller("AddBookCtrlr", function ($scope) {
            $scope.products = ["Milk", "Bread", "Cheese"];
            $scope.addItem = function () {
                $scope.errortext = "";
                if (!$scope.addMe) { return; }
                if ($scope.products.indexOf($scope.addMe) == -1) {
                    $scope.products.push($scope.addMe);
                } else {
                    $scope.errortext = "The item is already in your shopping list.";
                }
            }
            $scope.removeItem = function (x) {
                $scope.errortext = "";
                $scope.products.splice(x, 1);
            }
        });



        var i = 0;
        function add_list_ajax() {
            var result = "";
            result = $("#maSach").val();
            console.log(result);
            $.ajax({
                type: "GET",
                url: "@(Url.Action("_GetBookItemById", "PhieuMuon"))",
                data: "idBook=" + result,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    AddOpt = new Option(data.TenSach, data.IdDauSach);
                    document.getElementById("lstValue").options[i++] = AddOpt;
                    $("#lstmaSach").add(data.TenSach)

                    //   var kq = "<div style='color: #f00;'> " + data.IdDauSach + " " + data.TenSach + " </div>";
                    //$("#lstValue").append(kq);
                },
                error: function () { alert('False!'); }
            });
        }
        function deleteValue() {
            var s = 1;
            var Index;
            if (document.getElementById("lstValue").selectedIndex == -1) {
                alert("Please select any item from the ListBox");
                return true;
            }
            while (s > 0) {
                Index = document.getElementById("lstValue").selectedIndex;
                if (Index >= 0) {
                    document.getElementById("lstValue").options[Index] = null;
                    --i;
                    $.ajax({
                        type: "GET",
                        url: "@(Url.Action("_Remove", "PhieuMuon"))",
                        data: "idBook=" + result,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (data) {
                            //   var kq = "<div style='color: #f00;'> " + data.IdDauSach + " " + data.TenSach + " </div>";
                            //$("#lstValue").append(kq);
                        },
                        error: function () { alert('False!'); }
                    });
                }
                else
                    s = 0;
            }
            return true;
        }




        $(function () {
            $(".datepicker").datepicker({
                showWeek: true,
                dateFormat: "dd/mm/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-10:+1"
            }).attr('readonly', 'readonly');
            //.attr('readonly', 'readonly')
        });

        function OnChangeEvent() {
            var result = "";
            result = $("#idUser").val();
            console.log(result);
            $.ajax({
                type: "GET",
                url: "@(Url.Action("GetName", "PhieuMuon"))",
                data: "idUser=" + result,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    $("#idTen").val(data.Ten);
                },
                error: function () {
                    alert('Mã thành viên không phù hợp');
                    $("#idTen").val("");
                    $("#idUser").val("");
                }

            });
        }


    </script>

    @*<script>
            var app = angular.module("bookList", []);
            //
                var i = 0;
                function add_list_ajax() {
                    var result = "";
                    result = $("#maSach").val();
                    console.log(result);
                    $.ajax({
                        type: "GET",
                        url: "@(Url.Action("_GetBookItemById", "PhieuMuon"))",
                        data: "idBook=" + result,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        AddOpt = new Option(data.TenSach, data.IdDauSach);
                        document.getElementById("lstValue").options[i++] = AddOpt;
                        //   var kq = "<div style='color: #f00;'> " + data.IdDauSach + " " + data.TenSach + " </div>";
                        //$("#lstValue").append(kq);
                    },
                    error: function () { alert('False!'); }
                });
                }
            //
            app.controller("myCtrl", function ($scope) {
                $scope.products = ["Milk", "Bread", "Cheese"];
                $scope.addItem = function () {
                    $scope.errortext = "";
                    if (!$scope.addMe) { return; }
                    if ($scope.products.indexOf($scope.addMe) == -1) {
                        $scope.products.push($scope.addMe);
                    } else {
                        $scope.errortext = "The item is already in your shopping list.";
                    }
                }
                $scope.removeItem = function (x) {
                    $scope.errortext = "";
                    $scope.products.splice(x, 1);
                }
            });
        </script>*@
}


