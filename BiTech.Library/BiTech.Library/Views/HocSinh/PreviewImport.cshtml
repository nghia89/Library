@model BiTech.Library.Models.ImportExcelTVViewModel
@using Newtonsoft.Json;
@{
    Layout = null;
}
<link href="~/bower_components/sweetalert/dist/sweetalert.css" rel="stylesheet" />
<ul class="list-group">
    <li class="list-group-item">       
        <b id="CountTotal">Tổng số tài khoản được nhận diện: <b class="CountTotal_SL" data-tongsl="@Model.TotalEntry">@Model.TotalEntry</b></b>
    </li>
</ul>

<center><h3>Danh sách đã nhận diện</h3></center>

<div id="result-table-container">
    <div style="overflow-x:auto">
        <table class="table table-hover table-bordered mb-0" border="1" id="result-table">
            <thead>
                <tr class="table-info text-center">
                    @{
                        var longestRow = Model.RawDataList.FirstOrDefault();
                        if (longestRow != null)
                        {
                            <th>STT</th>
                            <th width="15%">Họ và tên</th>
                            <th width="10%">Tên user</th>
                            <th width="10%">Mã học sinh</th>
                            <th width="5%">Giới tính</th>
                            <th width="10%">Ngày sinh</th>
                            <th width="5%">Lớp học</th>
                            <th width="10%">Niên khóa</th>
                            <th width="15%">Địa chỉ</th>
                            <th width="10%">SĐT</th>
                        }
                    }
                    <th><center>Thao tác</center></th>
                </tr>
            </thead>
            <tbody>
                @{
                    var orderNumber = 0;
                    var stt = 1;
                    var index = 0;
                    foreach (var item in Model.RawDataList)
                    {
                        orderNumber += 1;
                        var col = 1;
                        <tr id="element-@orderNumber" class="text-center">
                            <td class="text-center SL_STT-@stt" data-tongstt="@stt">@stt</td>
                            @for (int j = 1; j < item.Length; j++)
                            {
                                if (col == 5)
                                {
                                    if (!String.IsNullOrEmpty(@item[j]))
                                    {
                                        string ngaySinh = @item[j].Replace("00:00:00", "");
                                        <td>@ngaySinh</td>
                                    }
                                    else
                                    {
                                        <td></td>
                                    }
                                }
                                else
                                {
                                    <td>@item[j]</td>
                                }
                                col++;
                            }
                            <td>
                                <center>
                                    <a href="#@orderNumber"
                                       class="btn btn-sm btn-danger remove-acction arrayindex-@index"
                                       data-array-index="@index"
                                       data-constant-index="@index">Xóa</a>
                                </center>
                            </td>
                        </tr>
                        index++;
                        stt++;
                    }
                }
            </tbody>
        </table>
        <br />
        <div class="f1-buttons">
            <button type="button" class="btn btn-sm mt-2" id="btn-back"> Quay lại</button>
            <button class="btn btn-sm btn-success has-spinner btn-check-step-2 mt-2" id="btn-check-step-2">Tiếp tục</button>
            <button type="button" class="btn btn-sm btn-next mt-2" id="step-2-success" style="display: none;">Next</button>
        </div>
        <br />
    </div>
</div>
@{
    // Chuyển danh sách các tài khoản thành chuỗi JSON để chuyển lên Server
    var jsonData = Html.Raw(JsonConvert.SerializeObject(Model.RawDataList));
}

<script>

    jsonData = @jsonData;

    function clearSelectBoxDefaultOption(element) {
        if ($(element).attr('data-is-selected') == 'false') {
            $('#' + $(element).attr('id') + ' :selected').remove();
            $(element).attr('data-is-selected', 'true')
        }
        $('#' + $(element).attr('id')).removeClass('duplicate-select-box-value');
    }
    missingInformation            = false;
    finishCheckMissingInformation = false;
    duplicateInformation          = false;
    // Save changes
    $(document).on('click','button[data-action="save-changes"]',function () {
        var orderNumber = parseInt($(this).attr("data-order-number"));
        var index       = orderNumber - 1;
        var length      = parseInt($(this).attr("data-length"));

        for (var i = 0; i < length; i++) {
            jsonData[index][i] = $("#element-" + orderNumber + "-" + i).val();
            $("#element-" + orderNumber + "-" + i).replaceWith(jsonData[index][i] );
        }

        $("#element-" + orderNumber + "-" + (length + 1 )).html('<center><a href="#'+orderNumber+'" data-array-index="'+(orderNumber-1)+'" class="btn btn-primary edit-action">Sửa</a> <a href="#'+orderNumber+'" data-array-index="'+index+'" class="btn btn-danger remove-acction">Xóa</a></center>');
    });
    // Undo changes
    $(document).on('click','button[data-action="undo-changes"]',function () {
        var orderNumber = parseInt($(this).attr("data-order-number"));
        var index       = orderNumber - 1;
        var length      = parseInt($(this).attr("data-length"));

        var originalData = jsonData[index];
        for (var i = 0; i < length; i++) {
            $("#element-" + orderNumber + "-" + i).replaceWith(originalData[i]);
        }

        $("#element-" + orderNumber + "-" + (length + 1 )).html('<center><a href="#'+orderNumber+'" data-array-index="'+(orderNumber-1)+'" class="btn btn-primary edit-action">Sửa</a> <a href="#'+orderNumber+'" data-array-index="'+index+'" class="btn btn-danger remove-acction">Xóa</a></center>');
    });

    // Remove action
    $(document).on('click','.remove-acction', function () {
        var arrayIndex = $(this).data("array-index");// Dùng để update lại row khi xóa
        var arrayIndex_element = $(this).attr("data-constant-index");// Dùng để update STT và Xác định Row bị xóa
        swal({
            title: "Xác nhận",
            text: "Bạn có chắc chắn xóa mục đã chọn không ?",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Đồng ý",
            cancelButtonText: "Hủy",
            closeOnConfirm: false
        },
       function (isConfirm) {
           if (isConfirm) {
               jsonData.splice(arrayIndex, 1); // Xóa vị trí Data trong JsonData ứng với vị trí Row trong Table
               $("#element-" + (parseInt(arrayIndex_element) + 1)).hide();
               console.log( $("#element-" + (parseInt(arrayIndex) + 1)));
               // Số lượng tổng
               var TSL = $(".CountTotal_SL").data("tongsl");
               var kq_TSL = parseInt(TSL) - 1;
               $(".CountTotal_SL").data("tongsl",kq_TSL );
               $(".CountTotal_SL").html(kq_TSL);
               // STT
               var begin=parseInt(arrayIndex_element) +1 ;
               var end=@Model.TotalEntry;
               for (var i = begin+1; i <= end; i++)
               {
                   var TSL2 = $(".SL_STT-"+i).data("tongstt");
                   var kq_TSL2 = parseInt(TSL2) - 1;
                   $(".SL_STT-"+i).data("tongstt", kq_TSL2);
                   $(".SL_STT-"+i).html(kq_TSL2);
               }
               // Array Index - update lại jsonData
               arrBegin=parseInt(arrayIndex);
               arrEnd=@Model.TotalEntry;
               for(var i=arrBegin+1;i<=arrEnd;i++)
               {
                   var dataIndex = $(".arrayindex-"+i).data("array-index");// du lieu o vi tri tiep theo
                   var dataIndexNext=parseInt(dataIndex) - 1;// du lieu -1
                   $(".arrayindex-"+i).data("array-index", dataIndexNext);// gan lai vao vi tri do
               }
               swal({
                   title: "Đã xong",
                   type: "success",
                   text: "Đã loại bỏ tài khoản mà bạn vừa chọn !!!"
               }, function () {                   
               });
           }
       });
    });
    // btn Trở lại
    $(document).on('click','#btn-back',function(){
        location.reload();
    })
    // --
    $(document).on('click', '#btn-check-step-2', function (e) {
        e.preventDefault();
        $(this).addClass('active');

        $.post('@Url.Content("~/HocSinh/ImportSave")',{
            data : jsonData
        }).done(function (data) {

            $("#success-step-container #message").html(data);
            $("#step-2-success").click();
            $("#btn-check-step-2").removeClass('active');
        }).fail(function () {
            swal({title:'Thông tin không hợp lệ',text:'Kiểm tra lại các cột dữ liệu có phù hợp hay chưa.',type:'error'},function () {
                $("#btn-check-step-2").removeClass('active');
            });
        });
    });

    function goToByScroll(id){
        // Remove "link" from the ID
        id = id.replace("link", "");
        // Scroll
        $('html,body').animate({
            scrollTop: $("#"+id).offset().top - 100},
            'slow');
    }

    var currentTable = $("#result-table").clone();
    currentTable.find('.danger').remove();
    currentTable.find('.warning').remove();
</script>
