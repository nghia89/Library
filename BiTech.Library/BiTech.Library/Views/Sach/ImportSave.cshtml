@model BiTech.Library.Models.ImportExcelSachViewModel
@using BiTech.Library.DTO;
@{
    Layout = null;
    ViewBag.Title = "ResultImportExcel";
}
<h4 class="text-success">Lưu thành công @Model.ListSuccess.Count đầu sách</h4>
<h4 class="text-danger">Lưu thất bại @Model.ListFail.Count đầu sách</h4>
@if (@Model.ListFail.Count > 0)
{
    <button type="button" class="btn btn-danger btn-sm" onclick="window.location='@Url.Action("DowloadExcel", "Sach",new {filePath=Model.FilePath, fileName = Model.FileName })'">
        <i class="fa fa-cloud-download" style="padding-right: 4px;font-size: 17px;"> Tải file lỗi để sửa</i>
    </button>
    <center><h3>Danh sách bị lỗi</h3></center>
    <br />
    <div>
        <div style="overflow-x:auto">
            <table class="table table-hover table-bordered mb-0" border="1" id="result-table">
                <thead>
                    <tr class="table-info text-center">
                        @{
                            var longestRow = Model.ListShow.FirstOrDefault();
                            if (longestRow != null)
                            {
                                <th>STT</th>
                                <th>Tên sách</th>
                                <th>Mã ISBN</th>
                                <th>Thể loại sách</th>
                                <th>Mã DDC</th>
                                <th>Tác giả</th>
                                <th>Nhà xuất bản</th>
                                <th>Kệ sách</th>
                                <th>Số trang</th>
                                <th>Ngôn ngữ</th>
                                <th>Năm xuất bản</th>
                                <th>Giá bìa</th>
                                <th>Phí mượn</th>
                                <th>Nước xuất xứ</th>
                                <th>Người biên soạn</th>
                                <th>Lần xuất bản</th>
                                <th>Tài liệu đính kèm</th>
                                <th>Tóm tắt</th>
                                <th>Nguyên nhân lỗi </th>
                            }
                        }
                    </tr>
                </thead>
                <tbody>
                    @{
                        var orderNumber = 0;
                        int row = 1;
                        foreach (var item in Model.ListShow)
                        {
                            var col = 0;
                            <tr id="element-@orderNumber">
                                @foreach (var j in item)
                                {
                                    // tô màu ô trống dữ liệu cần thiết
                                    if (String.IsNullOrEmpty(j.ToString().Trim()) && (col == 1 || col == 3 || col == 6 || col == 8 ||
                                         col == 9 || col == 10 || col == 12 || col == 17 || col == 5))
                                    {
                                        <td style="background: #dc354582;"></td>
                                    }
                                    // format ô DDC
                                    else if (col == 4)
                                    {
                                        string strDDC = System.Text.RegularExpressions.Regex.Match(@j.ToString().Trim(), @"^\d{3}$").ToString();
                                        if (strDDC.Trim().Length == 3 || @j.ToString().Trim().Length == 0)
                                        {
                                            <td> @j.ToString()</td>
                                        }
                                        else
                                        {
                                            <td style="background: #dc354582;"> @j.ToString()</td>
                                        }
                                    }
                                    // format ô ghi chú
                                    else if (col == 17)
                                    {
                                        <td style="white-space: nowrap;
                                        overflow:hidden;
                                        text-overflow: ellipsis;
                                        max-width: 50px;
                                        max-height:50px;">
                                            @j.ToString()
                                        </td>
                                    }
                                    else
                                    {
                                        <td>@j.ToString()</td>
                                    }
                                    col++;
                                }
                            </tr>
                            row++;
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
                        }
<br />
<div class="f1-buttons">
    <button type="button" class="btn btn-sm btn-success" id="btn-finish"><i class=""></i>Hoàn tất</button>
</div>
<style>
    .CellError {
        background: #dc354582;
    }

    .table-wrapper-scroll-y {
        display: block;
        width: 100%;
        overflow: auto;
        -ms-overflow-style: -ms-autohiding-scrollbar;
    }

    .scrollbar {
        margin-left: 30px;
        float: left;
        height: auto;
        width: auto;
        background: #fff;
        overflow-y: scroll;
        margin-bottom: 25px;
    }

    .force-overflow {
        min-height: 450px;
    }

    .scrollbar-primary::-webkit-scrollbar {
        width: 12px;
        background-color: #F5F5F5;
    }

    .scrollbar-primary::-webkit-scrollbar-thumb {
        border-radius: 10px;
        -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.1);
        background-color: #4285F4;
    }
</style>
<script>
    $(document).on('click', '#btn-finish', function () {
        location.reload();
    }); 
</script>
