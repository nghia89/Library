@model BiTech.Library.Models.SachUploadModel
@{
    /**/

    ViewBag.Title = "Sửa sách";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
    var IdTacGia = (List<BiTech.Library.DTO.TacGia>)ViewBag.IdTacGia;
}

<link href="~/bower_components/sweetalert/dist/sweetalert.css" rel="stylesheet" />
<link href="~/Content/tagsinput/ng-tags-input.css" rel="stylesheet" />
<link href="~/Content/Avatar.css" rel="stylesheet" />
<link href="~/Content/ThongKe.css" rel="stylesheet" />
<script src="~/Scripts/angular.min.js"></script>
<script src="~/Scripts/ng-tags-input.js"></script>
<script src="~/app/ngTagInputAngular.js"></script>

<div class="Title">Sửa Sách</div>

<div class="form-group row">
    <div class="col-md-12">
        <button type="button" class="btn btn-primary btn-sm" onclick="window.location='/Sach'">
            <i class="fa fa-arrow-circle-left" style="padding-right: 4px;font-size: 17px;"></i>Trở lại
        </button>
    </div>
</div>

<div class="row">

    <div class="col-md-12">
        <div ng-app="LibraryApp" class="clearfix">
            @using (Html.BeginForm("Edit", "Sach", FormMethod.Post, new { role = "form", enctype = "multipart/form-data" }))
            {
                <input name="SachDTO.Id" id="Data-IDsach" value="@Model.SachDTO.Id" hidden />
                <input name="SachDTO.MaKiemSoat" id="Data-MaKiemSoat" value="@Model.SachDTO.MaKiemSoat" hidden />
                <div style="display:flex;">

                    <div class="avatar_biaSach" style="width:300px; float:left; position: relative; min-width: 230px;">
                        <div class="left_sticky">
                            <div class="col-sm-12">
                                <div class="avatar_container_HA clearfix" style="display:block; margin-left:auto;margin-right:auto;">
                                    <img id="SaveImage" class="avatar_img" src="@((Model.SachDTO.LinkBiaSach != null) ? Model.SachDTO.LinkBiaSach : "")" onerror="this.src = '/Content/Images/book.png'" alt="" />
                                    <label class="avatar " for="FileImageCover">
                                        @Html.TextBoxFor(m => m.FileImageCover, new { @class = "avatar_input", type = "file", accept = "image/jpeg,image/gif,image/jpg,image/png,image/bmp" })
                                        <svg version="1.1" id="camera" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                                             viewBox="0 0 25 15" enable-background="new 0 0 25 15" xml:space="preserve">
                                        <path id="cameraFrame" fill="none" stroke="white" stroke-miterlimit="10" d="M23.1,14.1H1.9c-0.6,0-1-0.4-1-1V1.9c0-0.6,0.4-1,1-1h21.2c0.6,0,1,0.4,1,1v11.3C24.1,13.7,23.7,14.1,23.1,14.1z" />
                                        <path id="circle" fill="none" stroke="#ffffff" stroke-width="1.4" stroke-miterlimit="12" d="M17.7,7.5c0-2.8-2.3-5.2-5.2-5.2S7.3,4.7,7.3,7.5s2.3,5.2,5.2,5.2S17.7,10.3,17.7,7.5z" />
                                        <g id="plus">
                                        <path fill="none" id="plusLine" class="line" stroke="#ffffff" stroke-linecap="round" stroke-miterlimit="10" d="M20.9,2.3v4.4" />
                                        <path fill="none" class="line" stroke="#ffffff" stroke-linecap="round" stroke-miterlimit="10" d="M18.7,4.6h4.4" />
                                    </g>
                                </svg>
                                    </label>
                                </div>
                            </div>
                            <img class="col-sm-12" src="@Model.SachDTO.QRlink" style="max-width:220px; display:block; margin-left:auto;margin-right:auto;" />
                            <div class="col-sm-12" style="text-align: center;">
                                <input type="submit" class="btn btn-primary btn-sm" name="btnThemSach" value="Cập nhật" />
                                <input type="button" class="btn btn-danger btn-sm" value="Xóa" onclick="XoaSach('@Model.SachDTO.Id','@Model.SachDTO.TenSach')" />
                            </div>
                        </div>
                    </div>

                    <div class="col-dl-right">
                        <div class="tab">
                            <button type="button" class="tablinks active" onclick="openCity(event, 'Info')">Thông tin chung</button>
                            <button type="button" class="tablinks" onclick="openCity(event, 'Marc21')">Marc21</button>
                            <button type="button" class="tablinks" onclick="openCity(event, 'Stats')">Thông tin kho</button>
                        </div>
                        <div id="Info" class="tabcontent" style="display:block; padding-left:12px; padding-right:12px;">

                            <div class="form-group-sm row">
                                <label class="col-form-label col-dl-label form-label" for="tensach">Tên sách <span style="color:red">*</span>:</label>
                                <div class="col-dl-full">
                                    @Html.TextBoxFor(m => m.SachDTO.TenSach, new { @class = "form-control form-control-sm", @id = "tensach" })
                                    @Html.ValidationMessageFor(model => model.SachDTO.TenSach, "", new { @class = "text-danger" })

                                </div>
                            </div>

                            <div class="form-group-sm row">
                                <label class="col-form-label col-dl-label form-label" for="ISBN">Mã ISBN:</label>
                                <div class="col-dl-full">
                                    @Html.TextBoxFor(m => m.SachDTO.ISBN, new { @class = "form-control form-control-sm", @id = "ISBN", type = "number" })
                                </div>
                            </div>

                            <div class="form-group-sm row">
                                <label class="col-form-label col-dl-label form-label" for="IdTheLoai">Thể loại sách <span style="color:red">*</span>:</label>
                                <div class="col-dl-half">
                                    <div class="input-group mb-3" id="ListTT" ng-controller="BookGenresCtrlr" ng-init="GetAllData('@ViewBag.TLS')">
                                        @Html.DropDownListFor(m => m.SachDTO.IdTheLoai, new SelectList(new List<BiTech.Library.DTO.TheLoaiSach>(), "Id", "TenTheLoai"), "--Chọn Loại Sách--",
                               new { @id = "IdTheLoai", @class = "form-control form-control-sm", @ng_model = "IdTheLoai", @data_ng_disabled = "!list", @ng_options = "s.TenTheLoai for s in list track by s.Id" })
                                        @*s.Id as s.TenTheLoai for s in list*@
                                        <div class="input-group-append">
                                            <a href="@Url.Content("~/Sach/RequestThemTheLoaiGui")" class="btn btn-primary btn-sm"
                                               data-ajax="true" data-ajax-begin="RequestAltInsertGuiBegin" data-ajax-success="RequestAltInsertGuiSuccess">
                                                <i class="fa fa-plus" style="line-height: 20px;"></i>
                                            </a>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.SachDTO.IdTheLoai, "", new { @class = "text-danger" })

                                </div>

                                @*Nhà xuất bản*@

                                <label class="col-form-label col-dl-label form-label" for="IdNhaXuatBan">Nhà xuất bản <span style="color:red">*</span>:</label>
                                <div class="col-dl-half">
                                    <div class="input-group mb-3" id="ListNXB" ng-controller="PublishersCtrlr" ng-init="GetAllData('@ViewBag.NXB')">
                                        @Html.DropDownListFor(m => m.SachDTO.IdNhaXuatBan, new SelectList(new List<BiTech.Library.DTO.NhaXuatBan>(), "Id", "Ten"), "--Chọn NXB--",
                               new { @id = "IdNhaXuatBan", @class = "form-control form-control-sm", @ng_model = "IdNhaXuatBan", @data_ng_disabled = "!list", @ng_options = "s.Ten for s in list track by s.Id" })
                                        <div class="input-group-append">
                                            <a href="@Url.Content("~/Sach/RequestThemNhaXuatBan")" class="btn btn-primary btn-sm"
                                               data-ajax="true" data-ajax-begin="RequestAltInsertGuiBegin" data-ajax-success="RequestAltInsertGuiSuccess">
                                                <i class="fa fa-plus" style="line-height: 20px;"></i>
                                            </a>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.SachDTO.IdNhaXuatBan, "", new { @class = "text-danger" })

                                </div>
                            </div>

                            <div class="form-group-sm row">
                                <label class="col-form-label col-dl-label form-label" for="DDC">Mã DDC:</label>
                                <div class="col-dl-full">
                                    @Html.TextBoxFor(m => m.SachDTO.DDC, new { @class = "form-control form-control-sm", @id = "DDC" })
                                    @Html.ValidationMessageFor(model => model.SachDTO.DDC, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group-sm row">
                                <label class="col-form-label col-dl-label form-label">Tác giả <span style="color:red">*</span>:</label>
                                <div class="col-dl-full">

                                    <div class="input-group" style="margin-bottom:4px" id="ListTacGia" ng-controller="TacGiaFinder" ng-init="GetAllTacGiaByIdSach('@Model.SachDTO.Id');">
                                        <tags-input ng-model="listtg"
                                                    replace-spaces-with-dashes="false"
                                                    display-property="TenTacGia"
                                                    allowDuplicates="true"
                                                    placeholder="Nhập tên tác giả ..."
                                                    class="form-control form-control-sm form-control-tag">
                                            <auto-complete source="loadData($query)"></auto-complete>
                                            <div ng-repeat="s in listtg">
                                                <input hidden="hidden" ng-cloak class="btn btn-default" required name="ListTacGiaJson" value="{{s}}" />
                                            </div>
                                        </tags-input>
                                        <div class="input-group-append">
                                            <a href="@Url.Content("~/Sach/ThemTacGia")" class="btn btn-primary btn-sm"
                                               data-ajax="true" data-ajax-begin="RequestAltInsertGuiBegin" data-ajax-success="RequestAltInsertGuiSuccess">
                                                <i class="fa fa-plus" style="opacity:0"></i>
                                                <i class="fa fa-plus" style="position: absolute; top: 50%; left: 50%; transform: translateX(-50%) translateY(-50%);"></i>
                                            </a>
                                        </div>

                                    </div>
                                    @Html.ValidationMessageFor(model => model.ListTacGiaJson, "", new { @class = "text-danger" })

                                </div>
                            </div>

                            <div class="form-group-sm row">
                                @*Người biên dịch:*@
                                <label class="col-form-label col-dl-label form-label" for="NguoiBienDich">Người biên dịch:</label>
                                <div class="col-dl-half">
                                    @Html.TextBoxFor(m => m.SachDTO.NguoiBienDich, new { @class = "form-control form-control-sm", @id = "NguoiBienDich" })
                                </div>

                                @*Số trang:*@
                                <label class="col-form-label col-dl-label form-label" for="sotrang">Số trang <span style="color:red">*</span>:</label>
                                <div class="col-dl-half">
                                    @Html.TextBoxFor(m => m.SachDTO.SoTrang, new { @class = "form-control form-control-sm", @id = "sotrang" })
                                    @Html.ValidationMessageFor(model => model.SachDTO.SoTrang, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group-sm row">
                                @*Ngôn ngữ:*@
                                <label class="col-form-label col-dl-label form-label" for="IdNgonNgu">Ngôn ngữ <span style="color:red">*</span>:</label>
                                <div class="col-dl-half">
                                    <div class="input-group mb-3" id="Language" ng-controller="NgonNgu" ng-init="GetAllData('@ViewBag.NgonNgu')">
                                        @Html.DropDownListFor(m => m.SachDTO.IdNgonNgu, new SelectList(new List<BiTech.Library.DTO.Language>(), "Id", "Ten"), "--Chọn Ngôn Ngữ--",
                               new { @id = "IdNgonNgu", @class = "form-control form-control-sm", @ng_model = "IdNgonNgu", @data_ng_disabled = "!list", @ng_options = "s.Ten for s in list track by s.Id" })
                                        <div class="input-group-append">
                                            <a href="@Url.Content("~/Sach/RequestLanguage")" class="btn btn-primary btn-sm"
                                               data-ajax="true" data-ajax-begin="RequestAltInsertGuiBegin" data-ajax-success="RequestAltInsertGuiSuccess">
                                                <i class="fa fa-plus" style="line-height: 20px;"></i>
                                            </a>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.SachDTO.IdNgonNgu, "", new { @class = "text-danger" })
                                </div>

                                @*Năm xuất bản:*@
                                <label class="col-form-label col-dl-label form-label" for="NamSanXuat">Năm xuất bản <span style="color:red">*</span>:</label>
                                <div class="col-dl-half">
                                    @Html.TextBoxFor(m => m.SachDTO.NamXuatBan, new { @class = "form-control form-control-sm", @id = "NamSanXuat", type = "number" })
                                    @Html.ValidationMessageFor(model => model.SachDTO.NamXuatBan, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group-sm row">
                                @*Nước xuất xứ:*@
                                <label class="col-form-label col-dl-label form-label" for="XuatXu">Nước xuất xứ:</label>
                                <div class="col-dl-half">
                                    @Html.TextBoxFor(m => m.SachDTO.XuatXu, new { @class = "form-control form-control-sm", @id = "XuatXu" })
                                </div>

                                @*Lần xuất bản:*@
                                <label class="col-form-label col-dl-label form-label" for="TaiBan">Lần xuất bản:</label>
                                <div class="col-dl-half">
                                    @Html.TextBoxFor(m => m.SachDTO.TaiBan, new { @class = "form-control form-control-sm", @id = "TaiBan" })
                                </div>
                            </div>

                            <div class="form-group-sm row">
                                @*Giá sách:*@
                                <label class="col-form-label col-dl-label form-label" for="GiaBia">Giá sách:</label>
                                <div class="col-dl-half">
                                    @Html.TextBoxFor(m => m.SachDTO.GiaBia, new { @class = "form-control form-control-sm", @id = "GiaBia" })
                                </div>

                                @*Phí mượn sách:*@
                                <label class="col-form-label col-dl-label form-label" for="PhiMuonSach">Phí mượn sách <span style="color:red">*</span>:</label>
                                <div class="col-dl-half">
                                    @Html.TextBoxFor(m => m.SachDTO.PhiMuonSach, new { @class = "form-control form-control-sm", @id = "PhiMuonSach" })
                                    @Html.ValidationMessageFor(model => model.SachDTO.PhiMuonSach, "", new { @class = "text-danger" })

                                </div>
                            </div>

                            <div class="form-group-sm row">
                                <label class="col-form-label col-dl-label form-label" for="IdKeSach">Kệ sách:</label>
                                <div class="col-dl-half">
                                    <div class="input-group mb-3" id="ListKeSach" ng-controller="KeSach" ng-init="GetAllData('@ViewBag.KeSach')">
                                        @Html.DropDownListFor(m => m.SachDTO.IdKeSach, new SelectList(new List<BiTech.Library.DTO.KeSach>(), "Id", "Ten"), "--Chọn Kệ Sách--",
                               new { @id = "IdKeSach", @class = "form-control form-control-sm", @ng_model = "IdKeSach", @data_ng_disabled = "!list", @ng_options = "s.TenKe for s in list track by s.Id" })
                                        <div class="input-group-append">
                                            <a href="@Url.Content("~/Sach/RequestThemTheKeSach")" class="btn btn-primary btn-sm"
                                               data-ajax="true" data-ajax-begin="RequestAltInsertGuiBegin" data-ajax-success="RequestAltInsertGuiSuccess">
                                                <i class="fa fa-plus" style="line-height: 20px;"></i>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group-sm row">
                                <label class="col-form-label col-dl-label form-label" for="TomTat">Tóm tắt <span style="color:red">*</span>:</label>
                                <div class="col-dl-full">
                                    @Html.TextAreaFor(m => m.SachDTO.TomTat, new { @class = "form-control form-control-sm", @id = "TomTat", @style = "min-height:150px;" })
                                    @Html.ValidationMessageFor(model => model.SachDTO.TomTat, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div id="Marc21" class="tabcontent">
                            <textarea class="form-control" style="min-height:300px; background-color:white!important;" readonly>@Model.SachDTO.MARC21</textarea>
                        </div>
                        <div id="Stats" class="tabcontent">
                            <p class="mb-1"><span class="form-label">Tổng số lượng sách:</span> @Model.SachDTO.SoLuongTong</p>
                            <p class="mb-1"><span class="form-label">Số lượng sách còn lại:</span> @Model.SachDTO.SoLuongConLai</p>
                            <p class="mb-1"><span class="form-label">Tổng số lần được mượn:</span> @Model.SachDTO.SoLanDuocMuon</p>

                            @Html.Partial("_PartSlAndTT")
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
@{
    Html.RenderPartial("~/Views/Sach/_partEditSoLuong.cshtml");
}

<div id="ajax"></div>
@section scripts{

    <script>
        //$('.demo').fSelect();
    </script>
    @**@

    @*<script src="~/Scripts/bootstrap.min.js"></script>*@
    <script src="~/bower_components/jquery-ajax-unobtrusive/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/bower_components/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/bower_components/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/bower_components/sweetalert/dist/sweetalert.min.js"></script>
    <script src="~/Scripts/JsSoluongsach.js"></script>

    <script>
        var sltts = new SoLuongTTSach();
        sltts.initialize();
    </script>
    <script>

        // Ảnh thành viên
        $("#FileImageCover").change(function () {
            readURL_avatar(this);
        });
        $('.avatar').click(function (event) {
            event.stopPropagation();
        });
        function readURL_avatar(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#SaveImage').attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }
        $(document).ready(function () {
            readURL_avatar($('#FileImageCover'));
        });
        //end  Ảnh thành viên

        function RequestAltInsertGuiBegin() {
            $(this).addClass('active');
        }

        function RequestAltInsertGuiSuccess(data) {
            $(this).removeClass('active');

            $("#ajax").html(data);

            $("#edit-student-modal").modal();

            var form = $("#edit-student-modal").closest("form");
            form.removeData('validator');
            form.removeData('unobtrusiveValidation');
            $.validator.unobtrusive.parse(form);
        }

        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#blah').attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#FileImageCover").change(function () {
            readURL(this);
        });

        //$(document).ready(function () {
        //    setInterval(function () {
        //        angular.element(document.getElementById('ListTT')).scope().GetAllData();
        //        angular.element(document.getElementById('ListNXB')).scope().GetAllData();
        //    }, 30000);
        //});

        $(function () {
            var multiSelect = $('[data-multiple]');

            multiSelect.each(function () {
                var $this = $(this),
                    numberOfOptions = $this.children('option'),
                    listOption = $(),
                    previewOption = $(),
                    previewCloseButton = $();


                if (!$this.find('option:selected').length)
                    $this.addClass('empty');

                // Initially append class to select so it can be hidden
                $this.addClass('select-hidden');
                // Create wrappers and initial placeholders
                $this.wrap('<div class="multi-select"></div>');
                $this.after('<div class="multi-select-preview"></div>');
                var selectedOptions = $this.next('div.multi-select-preview');
                var selectOptionsListWrapper = $('<div />', {
                    'class': 'multi-select-options-wrapper'
                }).insertAfter(selectedOptions);

                var selectOptionsList = $('<ul />', {
                    'class': 'multi-select-options-list'
                }).appendTo(selectOptionsListWrapper);

                // Loop through all options and create list items that can be easily styled
                numberOfOptions.each(function (index, item) {
                    var $item = $(item);
                    listOption = listOption.add($('<li />', {
                        text: $item.text(),
                        rel: $item.val(),
                        'class': $item.attr('selected') ? 'selected' : ''
                    })).appendTo(selectOptionsList);

                    previewOption = previewOption.add($('<div />', {
                        'class': $item.attr('selected') ? 'selected-value active' : 'selected-value'
                    })).appendTo(selectedOptions);

                    $('<span />', {
                        text: '×',
                        'class': 'selected-value-icon',
                        'aria-hidden': true
                    }).appendTo(previewOption.eq(index));

                    $('<span />', {
                        text: $item.text(),
                        'class': 'selected-value-label',
                        'aria-selected': $item.attr('selected') ? true : false
                    }).appendTo(previewOption.eq(index));
                });

                var buttonClearAll = $('<span />', {
                    'class': true && $this.find('option:selected').length ? 'multi-select-clear' : 'multi-select-clear hidden',
                    text: '×'
                }).appendTo(selectedOptions);

                var buttonArrow = $('<span />', {
                    'class': 'multi-select-arrow'
                }).appendTo(selectedOptions);

                // Functionality on preview click
                selectedOptions.on('click', function (e) {
                    e.stopPropagation();
                    var $self = $(this);

                    $('div.multi-select-preview.active').not(this).each(function () {
                        $(this).removeClass('active').next('.multi-select-options-wrapper').hide();
                    });

                    $self.toggleClass('active').next('.multi-select-options-wrapper').toggle();
                });
                // Put close icon buttons in variable after initialization
                previewCloseButton = selectedOptions.find('.selected-value-icon');

                // Hide everything opened on document click
                $(document).on('click', function () {
                    selectedOptions.removeClass('active');
                    selectOptionsListWrapper.hide();
                });

                // On escape key close selecte
                $(document).keyup(function (e) {
                    if (selectOptionsListWrapper.is(':visible') && e.keyCode == 27) {
                        selectedOptions.removeClass('active');
                        selectOptionsListWrapper.hide();
                    }
                });

                // Functionality on picked option
                listOption.on('click', function (e) {
                    e.stopPropagation();
                    var $self = $(this);

                    var index = $self.index();
                    if ($self.hasClass('selected')) {
                        $self.removeClass('selected');
                        previewOption.eq(index).removeClass('active');
                        $this.find('option').eq(index).prop('selected', false);

                        triggerChange();
                    } else {
                        $self.addClass('selected');
                        previewOption.eq(index).addClass('active');
                        $this.find('option').eq(index).prop('selected', true);

                        triggerChange();
                    }
                });

                previewCloseButton.on('click', function (e) {
                    e.stopPropagation();
                    var currentPreviewOption = $(this).closest('.selected-value');
                    var index = currentPreviewOption.index();

                    currentPreviewOption.removeClass('active');
                    listOption.eq(index).removeClass('selected');
                    $this.find('option').eq(index).prop('selected', false);

                    triggerChange();
                });

                buttonClearAll.on('click', function (e) {
                    e.stopPropagation();
                    listOption.removeClass('selected');
                    previewOption.removeClass('active');
                    $this.find('option:selected').prop('selected', false);

                    triggerChange();
                });

                // Returns number of selected items
                var triggerChange = function () {
                    $this.change();
                    if ($this.find('option:selected').length > 0)
                        selectedOptions.removeClass('empty');
                    else
                        selectedOptions.addClass('empty');

                    console.log($this.val());
                };
            });
        }());

        // Tabs
        function openCity(evt, cityName) {
            var i, tabcontent, tablinks;
            tabcontent = document.getElementsByClassName("tabcontent");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }
            tablinks = document.getElementsByClassName("tablinks");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" active", "");
            }
            document.getElementById(cityName).style.display = "block";
            evt.currentTarget.className += " active";
        }

        /*sticky*/
        $(document).ready(function () {
            //$(".left_sticky").stick_in_parent();
            tinhvitri_in_parent(".left_sticky");

        });

        function tinhvitri_in_parent(div) {
            var w = $(div).width();
            $(window).scroll(function () {
                var h_parent_of_top = $(div).parent().offset().top;
                var h_parent = $(div).parent().height();
                var top = $(window).scrollTop();
                var h_left = $(div).height();
                var kq = top - h_parent_of_top; //cach top khi scroll
                var kq_dung = h_parent_of_top + h_parent - h_left;

                if (top > h_parent_of_top) {
                    $(div).stop().css({ "position": "absolute", "top": kq, "bottom": "auto", "width": "100%" });
                } else {
                    $(div).stop().css({ "position": "relative", "top": 0, "bottom": "auto" });
                }

                if (top > kq_dung) {
                    $(div).stop().css({ "position": "absolute", "bottom": 0, "top": "auto", "width": "100%" });
                }

            })
        }
        /*End sticky*/

        //Xoá Sách
        function XoaSach(id, ten) {
            swal({
                title: " Bạn có muốn xóa sách " + ten + "?",
                text: "Bạn sẽ không thể khôi phục lại kệ sách này sau khi xóa!",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Có",
                cancelButtonText: "Không",
                closeOnConfirm: false,
                closeOnCancel: true
            },
            function (isConfirm) {
                if (isConfirm) {
                    $.ajax({
                        type: 'POST',
                        url: "/Sach/Delete",
                        data: { "Id": id },
                        success: function (resultData) {
                            swal({
                                title: "Bạn đã xóa thành công!",
                                text: "Bạn sẽ không thể khôi phục lại sách này sau khi xóa!",
                                type: "success",
                                showCancelButton: false,
                                confirmButtonText: "OK",
                                closeOnConfirm: false
                            },
                            function (isConfirm) {
                                window.location.href = '/Sach/Index';
                            });
                        }
                    });
                }
            });
        }

    </script>
}